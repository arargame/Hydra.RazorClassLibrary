@typeparam T
@inherits InputComponentModel<T>

@* 
<input type="@TypeName"
       class="@GetElementCssClass()"
       @onchange="@OnChange"
       disabled="@IsDisabled"
       value="@(typeof(T) != typeof(bool) ? @Value : null)" /> *@


@if (WithLabel)
{
    <div class="form-floating">

        @RenderElement()

        <LabelComponent For="@GetElementId()" Value="@LabelValue"></LabelComponent>
    </div>
}
else
{
    @RenderElement()
}

@code {

    private RenderFragment RenderElement() => __builder =>
    {
        if (!IsVisible) return;

        <input class="@GetElementCssStyle()"
               disabled="@IsDisabled"
               id="@GetElementId()"
               @onchange="@OnChange"
               placeholder="@Placeholder"
               readonly="@IsReadonly"
               type="@TypeName"
               value="@(typeof(T) != typeof(bool) ? Value : null)" />
        ;
    };

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
    }
}